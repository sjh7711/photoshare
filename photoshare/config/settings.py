"""
Django settings for photoshare project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
#/home/test/photoshare/photoshare
#/app/photoshare


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

import os
import logging

class RequestFilter(logging.Filter):
    def filter(self, record):
        request = getattr(record, 'request', None)
        if request:
            record.ip = request.META.get('HTTP_X_FORWARDED_FOR', 'unknown')
            record.user_agent = request.META.get('HTTP_USER_AGENT', 'unknown')
            record.username = request.user.username
            record.url = request.build_absolute_uri()
        else:
            record.ip = 'unknown'
            record.user_agent = 'unknown'
            record.username = 'unknown'
            record.url = 'unknown'
        return True

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'request': {
            '()': RequestFilter,
        },
    },
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} | module: {module} | IP: {ip} | USERNAME: {username}\nUSER_AGENT: {user_agent}\nURL: {url}\n{message}\n',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, './log/debug.log'),
            'formatter': 'verbose',
            'filters': ['request'],
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'photos': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'celery': {
            'handlers': ['file'],
            'level': 'INFO',
        },
    },
}

from socket import gethostname, gethostbyname_ex
ALLOWED_HOSTS = ['192.168.0.200', '192.168.0.201', '192.168.0.202', '192.168.0.203', '192.168.0.210', '192.168.0.211', '192.168.0.212', '192.168.0.213', 'hoegiphoto.shop']
#[ gethostname(), ] + list(set(gethostbyname_ex(gethostname())[2])) + 
CSRF_TRUSTED_ORIGINS = ['192.168.0.200', '192.168.0.201', '192.168.0.202', '192.168.0.203', '192.168.0.210', '192.168.0.211', '192.168.0.212', '192.168.0.213', 'hoegiphoto.shop']
#['http://10.10.{}.{}'.format(i,j) for i in range(256) for j in range(256)]

# Application definition

INSTALLED_APPS = [
    'config',
    'photos',
    'photoprocess',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'webpush',
    'django_celery_results',
]

WEBPUSH_SETTINGS = {
    "VAPID_PUBLIC_KEY": "BF8W2TsvWTI-oNLpT5zFJ83aO_-3k65znBiCt0JkA6K2_8dOvgkrEihlFASeXop3uVQ9q-3AOnprJAkRoUhO9jg",
    "VAPID_PRIVATE_KEY": os.environ.get('VAPID_PRIVATE_KEY')
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'photos.middleware.UpdateLastActivityMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASSWORD'),
        'HOST': os.environ.get('DB_HOST'),
        'PORT': os.environ.get('DB_PORT'),
    }
}

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://192.168.0.220:6379/2",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    },
    "resource_monitor": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://192.168.0.220:6379/3",  # 리소스 모니터링용 별도 DB
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    },
    "uploaded_photo": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://192.168.0.220:6379/4",  # 업로드된 사진 정보 저장용 별도 DB
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"

CELERY_BROKER_URL = 'redis://192.168.0.220:6379/0'
CELERY_RESULT_BACKEND = 'redis://192.168.0.220:6379/1'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Asia/Seoul'
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    }
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

AUTH_USER_MODEL = 'photos.CustomUser'
LOGIN_URL = '/login/'